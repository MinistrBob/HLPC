---
# It is "buster" here because Astra Linux 1.7 corresponds to Debian 10 (Buster) and command 'lsb_release -cs' outputs result 'buster' on Debian 10 and '1.7_x86-64' on Astra Linux 1.7
- name: "Add specified repository into sources list using specified filename"
  apt_repository:
    repo: "{{ pg_apt_repository }} {{ pg_version }}"
    state: present
    filename: "{{ pg_apt_repository_filename }}"

- name: "Add an Apt signing key for postgresql"
  apt_key:
    url: "{{ pg_apt_key }}"
    state: present

# In Astra Linux 1.7 postgresql depends on libpq5 library and we need specific version this library. If the version is not specified explicitly, then the default version from the native OS repository will be installed.
- name: "Get libpq5 version"
  shell: "apt-cache policy libpq5 | grep -Po -m1 '{{ pg_version }}.*pgdg\\S*'"
  register: libpq5_version

- name: "Install libpq5 library"
  apt:
    name: "libpq5={{ libpq5_version.stdout }}"
    state: present
# --------------------------------------------

- name: "Install postgresql packages"
  package:
    name:
      - "postgresql-{{ pg_version }}"
      - "postgresql-client-{{ pg_version }}"
    state: present
    update_cache: yes
  register: postgresql_installed

- name: "Install postgresql contrib"
  package:
    name:
      - "postgresql-contrib-{{ postgresql_version }}"
    state: present
    update_cache: yes

#- name: "Install Python packages"
#  package:
#    name:
#      - psycopg2-binary
#    state: present

- name: Stop postgresql service {{ pg_service_name }}
  systemd:
    name: "{{ pg_service_name }}"
    state: stopped
  when: postgresql_installed.changed

- name: Drop the default database
  shell: "{{ pg_dropcluster }} {{ pg_version }} {{ pg_cluster_name }}"
  when: postgresql_installed.changed
  register: drop_database
  changed_when: drop_database.rc == 0
  failed_when: drop_database.rc != 0

# Create postgresql DB cluster with checksums (option --data-checksums is required)
# like /usr/lib/postgresql/13/bin/initdb -D /data/postgresql/13/main --data-checksums
- name: Create the database
  shell: "{{ pg_createcluster }} --datadir={{ pg_data_dir }} {{ pg_version }} {{ pg_cluster_name }} -- --data-checksums"
  when: drop_database.changed
  register: create_database
  changed_when: create_database.rc == 0
  failed_when: create_database.rc != 0

- name: Create a directory for archive WAL
  file:
    path: "{{ pg_data_dir }}/pg_archive"
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'

- name: Create a directory for logs
  file:
    path: "{{ pg_data_dir }}/log"
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'

- name: Change postgres user password
  user:
    name: "{{ pg_user }}"
    state: present
    password: "{{ pg_password | password_hash('sha512') }}"

- name: Setup pg_hba.conf
  template:
    src: "pg_hba.conf.j2"
    dest: "{{ pg_conf_dir }}/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: 0640

#- postgres.conf конфигурировать (параметры для postgresql в файле инвентаря, т.к. для каждого стенда свои параметры кроме общих)

#- запустить БД
